<?php
/******************************************************************************
	ADD_BS_RESULTS.PHP

	Updates the BreakSeq annotation to the db.
	It uses the output generated by php/run_breakseq.sh, which already contains the inversions annotated by BreakSeq.
	(See php/run_breakseq.sh for a more detailed information)
*******************************************************************************/
	
	#session_start(); //Inicio la sesiÃ³n
    #include_once('db_conexion.php');

	# ???? Is it important to connect with the 'invfest' user instead of 'invfestdb-lab' ????
    $user = "invfest";
    $password = "pwdInvFEST";
    $db = "INVFEST-DB-dev";

    $con = mysql_connect('localhost', $user, $password);
    if (!$con) { die('Could not connect: ' . mysql_error()); }
    mysql_select_db($db, $con);

    //Add BreakSeq annotation to the DB
    //----------------------------------------------------------------------------
    //BreakSeq output parsing
    $BS_output = @fopen("/home/invfest/BPSeq/breakseq_annotated_gff/Results/input.gff", "r");

    $array = array();
    if ($BS_output) {
    
        while (($line = fgets($BS_output, 4096)) !== false) {
    	    $cols = explode("\t", $line);
		    $breakseq_annot= explode(";", $cols[8]);
		    foreach ($breakseq_annot as $key) {
			    preg_match('/"([^"]+)"/', $key, $value);
			    $array[] = $value[1];
		    }
		    $name= $cols[1]; 
		    $flex=($array[1]);$GC=($array[2]);$Gene=($array[3]);$Helix=($array[4]);$Mech=($array[5]);
		    #$flex=($array[1]);$GC=($array[2]);$Gene=($array[3]);$Helix=($array[4]);$Mech=($array[5]);

		    //print $id_bp.'<br/>'.$gene_id.'<br/>'.$id.'<br/>'.$flex.'<br/>'.$GC.'<br/>'.$Gene.'<br/>'.$Helix.'<br/>'.$Mech.'<br/>'.'<br/>';
		    //Add results to breakpoints table
		    $sql_query="UPDATE breakpoints SET Flexibility = '$flex', GC = '$GC', Stability = '$Helix', Mech = '$Mech' WHERE inv_id = (SELECT id from inversions where name = '$name');";
		    $result_query=mysql_query($sql_query);
		    if (!$result_query) {
    		    $error_msg = print('Invalid query: ' . mysql_error().'<br/>');
    		    $test = fopen("/home/invfest/BPSeq/breakseq_annotated_gff/test_error.txt", "w");
    		    fwrite($test, $error_msg);
    		    fclose($test);
		    }
		    //Add results to Bseq_genes table
		    /*$annotated_genes= explode(",", $Gene);
		    foreach ($annotated_genes as $gene) {
			    $sql_query2="REPLACE into BSeq_genes(Breakpoint_id, Gene_id_genomic_effect, BSeq_gene) values($id_bp,$gene_id,'$gene');";
			    $result_query2=mysql_query($sql_query2);
			    if (!$result_query2) {
    			    print('Invalid query nova: ' . mysql_error().'<br/>');
			    }
		    }*/

		    $array = null;	
	    }

	    if (!feof($BS_output)) {echo "Error: unexpected fgets() fail\n";}
 
 	    fclose($BS_output);
    }
    //exec("nohup rm -fr /home/invfest/BPSeq/breakseq_annotated_gff/Results/* > /dev/null 2>&1 &");
?>
