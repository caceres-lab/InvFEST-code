.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "ExtUtils::MM_Win32 3"
.TH ExtUtils::MM_Win32 3 "2018-03-19" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
ExtUtils::MM_Win32 \- methods to override UN*X behaviour in ExtUtils::MakeMaker
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use ExtUtils::MM_Win32; # Done internally by ExtUtils::MakeMaker if needed
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
See ExtUtils::MM_Unix for a documentation of the methods provided
there. This package overrides the implementation of these methods, not
the semantics.
.SS "Overridden methods"
.IX Subsection "Overridden methods"
.IP "\fBdlsyms\fR" 4
.IX Item "dlsyms"
.PD 0
.IP "xs_dlsyms_ext" 4
.IX Item "xs_dlsyms_ext"
.PD
On Win32, is \f(CW\*(C`.def\*(C'\fR.
.IP "replace_manpage_separator" 4
.IX Item "replace_manpage_separator"
Changes the path separator with .
.IP "\fBmaybe_command\fR" 4
.IX Item "maybe_command"
Since Windows has nothing as simple as an executable bit, we check the
file extension.
.Sp
The \s-1PATHEXT\s0 env variable will be used to get a list of extensions that
might indicate a command, otherwise .com, .exe, .bat and .cmd will be
used by default.
.IP "\fBinit_DIRFILESEP\fR" 4
.IX Item "init_DIRFILESEP"
Using \e for Windows, except for \*(L"gmake\*(R" where it is /.
.IP "init_tools" 4
.IX Item "init_tools"
Override some of the slower, portable commands with Windows specific ones.
.IP "init_others" 4
.IX Item "init_others"
Override the default link and compile tools.
.Sp
\&\s-1LDLOADLIBS\s0's default is changed to \f(CW$Config\fR{libs}.
.Sp
Adjustments are made for Borland's quirks needing \-L to come first.
.IP "init_platform" 4
.IX Item "init_platform"
Add MM_Win32_VERSION.
.IP "platform_constants" 4
.IX Item "platform_constants"
.PD 0
.IP "specify_shell" 4
.IX Item "specify_shell"
.PD
Set \s-1SHELL\s0 to \f(CW$ENV\fR{\s-1COMSPEC\s0} only if make is type 'gmake'.
.IP "constants" 4
.IX Item "constants"
Add \s-1MAXLINELENGTH\s0 for dmake before all the constants are output.
.IP "special_targets" 4
.IX Item "special_targets"
Add .USESHELL target for dmake.
.IP "static_lib_pure_cmd" 4
.IX Item "static_lib_pure_cmd"
Defines how to run the archive utility
.IP "dynamic_lib" 4
.IX Item "dynamic_lib"
Methods are overridden here: not dynamic_lib itself, but the utility
ones that do the OS-specific work.
.IP "extra_clean_files" 4
.IX Item "extra_clean_files"
Clean out some extra dll.{base,exp} files which might be generated by
gcc.  Otherwise, take out all *.pdb files.
.IP "init_linker" 4
.IX Item "init_linker"
.PD 0
.IP "perl_script" 4
.IX Item "perl_script"
.PD
Checks for the perl program under several common perl extensions.
.IP "quote_dep" 4
.IX Item "quote_dep"
.PD 0
.IP "xs_obj_opt" 4
.IX Item "xs_obj_opt"
.PD
Override to fixup \-o flags for \s-1MSVC.\s0
.IP "pasthru" 4
.IX Item "pasthru"
All we send is \-nologo to nmake to prevent it from printing its damned
banner.
.IP "arch_check (override)" 4
.IX Item "arch_check (override)"
Normalize all arguments for consistency of comparison.
.IP "oneliner" 4
.IX Item "oneliner"
These are based on what command.com does on Win98.  They may be wrong
for other Windows shells, I don't know.
.IP "cd" 4
.IX Item "cd"
dmake can handle Unix style cd'ing but nmake (at least 1.5) cannot.  It
wants:
.Sp
.Vb 4
\&    cd dir1\edir2
\&    command
\&    another_command
\&    cd ..\e..
.Ve
.IP "max_exec_len" 4
.IX Item "max_exec_len"
nmake 1.50 limits command length to 2048 characters.
.IP "os_flavor" 4
.IX Item "os_flavor"
Windows is Win32.
.IP "cflags" 4
.IX Item "cflags"
Defines the \s-1PERLDLL\s0 symbol if we are configured for static building since all
code destined for the perl5xx.dll must be compiled with the \s-1PERLDLL\s0 symbol
defined.
.IP "make_type" 4
.IX Item "make_type"
Returns a suitable string describing the type of makefile being written.
