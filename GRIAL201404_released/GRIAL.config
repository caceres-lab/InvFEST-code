#------------------------------------------------------------------------------------
# Copyright (C) 2014, by the authors,  All rights reserved.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#	
# Name:      	grial.config 
#
# Author(s): 	Alexander Martínez-Fundichely & Sònia Casillas
#		Comparative and Functional Genomics group
#		Institut de Biotecnologia i de Biomedicina
#		Universitat Autònoma de Barcelona, Spain
#
# Contact:	batscherow@gmail.com, sonia.casillas@uab.cat
#
#     Status.......: 3.1 (Released)
#     Status Date..: 01.04.2014
#     Purpose......: set parameters for GRIAL.pl, GRIALscore.pl & generateRepeatTracks.pl
#
# Changes   Date(DD.MM.YYYY)   NAME   DESCRIPTION
#
#------------------------------------------------------------------------------------

############################# SET YOUR PREFERENCES BELOW ############################
# 	PLEASE NOTE THAT PARAMETER NAMES ARE ALWAYS *UPPERCASE*			    #
# 	PLEASE NOTE THAT VALUES ARE *LOWERCASE* (e.g. yes, no, all, any)	    #
# 	PLEASE NOTE THAT LINES PRECEEDED BY # ARE NOT READ BY GRIAL		    #
#####################################################################################

# SECTION 1: PATHS & FILENAMES #####################################

# Provide a file with the DISCORDANT MAPPINGS
DISCORDANTS_FILENAME=./testing/input/discordantFosmids.all

# Prefix for the files with CONCORDANT MAPPINGS (necessary to estimate the library statistics from the concordant mappings -if statistics are not provided in Section 2-, and to score inversions -in Section 5 or using the GRIALscore.pl script-)
# You should include one file per chromosome, and what you are providing in the parameter is the PATH to these files plus the PREFIX of these files; the name of each file is PREFIX.CHROMOSOME (e.g. ALL_c.chr1, ALL_c.chr2, ALL_c.chr3, etc.)
# If you have all concordant mappings in one single file, you can split them into multiple files using the bash command:
# for i in $(seq 1 22) X Y; do grep -oP "^chr$i\t.+" concordantFosmids > concordantFosmids.chr$i; done
CONCORDANTS_FILENAME_PREFIX=./testing/input/concordantFosmids

# Complete path to output folder. Please, make sure that output folder exists.
OUTPUT_PATH=./testing/output/

# You can choose a prefix for all output files. Useful if you run GRIAL multiple times with different parameters
OUTPUT_PREFIX=

# If you choose 'yes' to any of the discard/tag repeats/segdups parameters in Section 3 (DISCARD_MAPPINGS_IN_REPEATS, DISCARD_MAPPINGS_IN_SEGDUPS, TAG_MAPPINGS_IN_REPEATS, TAG_MAPPINGS_IN_SEGDUPS), or the mapability parameters in Section 6 (MAPABILITY_REPEATS, MAPABILITY_SEGDUPS), you need to provide a directory where the specific files for these analyses are found (see manual)
REPEATFILES_PATH=./testing/input/



# SECTION 2: LIBRARY STATISTICS & ASSEMBLY #########################

# How are you providing the library statistics?: 0 = Metrics provided below | 1 = GRIAL must calculate them from the concordant mappings provided in CONCORDANTS_FILENAME_PREFIX (Section 1, extra step for GRIAL that takes long time...)
CONCORDANTS=0

# If no concordants file (CONCORDANTS_FILENAME_PREFIX), you need to provide the statistics, at least AVG+XSTD|MIN+MAX && STD|VAR (XSTD is the number of STDs below and above the AVG; will be used to set MIN and MAX)
CONCORDANTS_AVG=39221.9922629086
CONCORDANTS_MIN=25163
CONCORDANTS_MAX=49224
CONCORDANTS_RAN=24061
CONCORDANTS_STD=2690.88150325854
CONCORDANTS_VAR=7240843.26457892
CONCORDANTS_XSTD=3

# Assembly to which mappings where done (UCSC nomenclature). Necessary to repair inconsistences due to inexistent chromosomes or BPs out of the range of the chromosomes
# Default: (blank)
ASSEMBLY=hg18



# SECTION 3: FILTERING OF MAPPINGS #################################

# You may specify which libraries you want to analyze from the input file (comma-separated)
# Otherwise, PEMs from all the libraries will be included in the analyses
# Default: all
LIBRARIES=all

# You may specify one or more chromosomes that you want to analyze from the input file (comma-separated)
# Otherwise, all the chromosomes from the input file will be analyzed
# Default: all
CHROMOSOMES=all

# Do you want to analyze PEMs in RANDOM chromosomes? (yes|no)
# Default: no
ANALYZE_RANDOM_CHROMOSOMES=no

# Remove PEMs that were selected from multiple mappings in the genome and report this as a fiability value in the results
# Choose 'any' to allow any number of mappings (discard no PEMs)
# Default: 10
MAX_ALLOWED_MAPPINGS=any

# Weight the support of each PEM based on the # of possible mappings it has in the genome (support = 1 / num_mappings)
# Otherwise, each PEM adds a support of 1 to the cluster (yes|no)
# If 'yes', please provide the # of possible mappings for each PEM in the input file!!!
# Default: no
WEIGHT_PEM_SUPPORT=no

# Remove PEMs with overlapping ends (maximum percentage overlap allowed)
# Default: 50
OVERLAPPINGENDS_PERC=50

# Weight duplicated PEMs 
# You may specify different values for different libraries in the form: DUPLICATEPEMS_BP_LIBNAME=XX
# Default: 5
DUPLICATEPEMS_BP=50
DUPLICATEPEMS_BP_G248=17

# Discard/Tag PEMs mapping in repeats masked by RepeatMasker
# You may specify which repeats you want to include in the discard/tag-lists (single-character codes one after another, no commas!; e.g. EIX). 
# Single-character codes corresponding to long-codes by RepeatMasker: 
#	S=SINE 
#	s=SINE? 
#	L=LINE 
#	l=LINE? 
#	T=LTR 
#	t=LTR? 
#	D=DNA 
#	d=DNA? 
#	R=snRNA/tRNA/rRNA/srpRNA/scRNA/RNA 
#	I=Simple-repeat 
#	X=Low-complexity 
#	E=Satellite 
#	C=RC 
#	U=Unknown 
#	u=Unknown? 
#	O=Other 
#	o=Other_not_in_this_list
# If XXX_REPEATS_LIST=all, all repeats will be included.
# Choose 'no' to not discard/tag any PEM mapping in repeats
# Defaults: DISCARD_MAPPINGS_IN_REPEATS=no, DISCARD_REPEATS_LIST=all, DISCARD_REPEATS_NUMREADS=any, TAG_MAPPINGS_IN_REPEATS=no, TAG_MAPPINGS_IN_REPEATS_ALL=yes, TAG_REPEATS_LIST=all, TAG_REPEATS_NUMREADS=any
DISCARD_MAPPINGS_IN_REPEATS=no
DISCARD_REPEATS_LIST=all
DISCARD_REPEATS_NUMREADS=any
TAG_MAPPINGS_IN_REPEATS=no
TAG_MAPPINGS_IN_REPEATS_ALL=yes
TAG_REPEATS_LIST=all
TAG_REPEATS_NUMREADS=any

# Discard/Tag PEMs mapping in Segmental Duplications
# Choose 'no' to not discard/tag repeats
# Defaults: DISCARD_MAPPINGS_IN_SEGDUPS=no, DISCARD_SEGDUPS_NUMREADS=any, TAG_MAPPINGS_IN_SEGDUPS=no, TAG_MAPPINGS_IN_SEGDUPS_ALL=yes, TAG_SEGDUPS_NUMREADS=any
DISCARD_MAPPINGS_IN_SEGDUPS=no
DISCARD_SEGDUPS_NUMREADS=any
TAG_MAPPINGS_IN_SEGDUPS=no
TAG_MAPPINGS_IN_SEGDUPS_ALL=yes
TAG_SEGDUPS_NUMREADS=any



# SECTION 4: CLUSTERING & INVERSION PREDICTION #####################

# Minimum *weighted* support for clusters (min PEMs per cluster) and predicted inversions (min total PEMs per inversion)
# Allow inversions predicted by one single cluster (++ or --)? (yes|no)
# Defaults: MIN_SUPPORT_CLUSTERS=1, MIN_SUPPORT_INVERSIONS=2, ALLOW_SINGLE_CLUSTER_INVERSIONS=yes
MIN_SUPPORT_CLUSTERS=1
MIN_SUPPORT_INVERSIONS=2
ALLOW_SINGLE_CLUSTER_INVERSIONS=yes

# Use the strict rules to join positive & negative clusters into inversions (see manual) (yes|no)
# Default: yes
JOINPOSNEGCLUSTERS_STRICT=yes

# Repaire inconsistences due to inexistent chromosomes or BPs out of the range of the chromosomes (yes|no)
# Requires that ASSEMBLY is specified above
# Default: no
REPAIR_BP_INCONSISTENCES=yes

# Tag suspicious inversions due to incongruent narrow BPs (yes|no)
# Default: yes
TAG_INCONGRUENT_BPS=yes

# Tag the use of the same cluster in >1 inversions (yes|no)
# Default: yes
TAG_MULTIPLE_USE_OF_CLUSTERS=yes



# SECTION 5: OUTPUT ################################################

# Do you want PEM indexes to be written in output files? (yes|no)
# Default: no
OUTPUT_PEM_INDEXES=yes

# You may specify which breakpoint definition you want to get as output (wide|narrow|all)
# Default: all
BP_DEFINITION=all



# SECTION 6: SCORING ###############################################

# Automatically execute the GRIALscore.pl script after predicting inversions. Needs the file with concordant mappings (CONCORDANTS_FILENAME_PREFIX)  (yes|no)
# Default: no
SCORE_INVERSIONS=yes

# Mapability calculation in the regions in and surrounding the Breakpoints: compute mapability of PEMs according to the presence of repeats and inverted segmental duplications in the regions in and surrounding the breakpoints. It improves the computation of GRIAL scores. Requires that ASSEMBLY and REPEATFILES_PATH are set and available, and MAPABILITY_SEGDUPS=yes requires connection to the UCSC database (yes|no)
# Default: MAPABILITY_REPEATS=no, MAPABILITY_SEGDUPS=no
MAPABILITY_REPEATS=yes
MAPABILITY_SEGDUPS=yes

# Mapability calculation in the regions in and surrounding the Breakpoints: in PEM reads of MAPABILITY_FRAGMENT_SIZE base pairs, MAPABILITY_NUM_CHANGES sequencing errors are expected (which might result in incorrect mapping). Only required if MAPABILITY_REPEATS=yes OR MAPABILITY_SEGDUPS=yes
# Default: 400
MAPABILITY_FRAGMENT_SIZE=400

# Mapability calculation in the regions in and surrounding the Breakpoints: in PEM reads of MAPABILITY_FRAGMENT_SIZE base pairs, MAPABILITY_NUM_CHANGES sequencing errors are expected (which might result in incorrect mapping). Only required if MAPABILITY_REPEATS=yes OR MAPABILITY_SEGDUPS=yes
# Default: 2
MAPABILITY_NUM_CHANGES=2

# Mapability calculation in the regions in and surrounding the Breakpoints: reduce mapability for the presence of REPEATS by RepeatMasker. MAPABILITY_REPEATS_IDENTITY indicates the % of identity of repeats, from 0 to 1. Only required if MAPABILITY_REPEATS=yes
# Default: 0.99
MAPABILITY_REPEATS_IDENTITY=0.99

# Mapability calculation in the regions in and surrounding the Breakpoints: structure of segmental duplications: % of the segmental duplication that is the central core, from 0 to 1. (1-MAPABILITY_SEGDUPS_CORE) is the % of the segmental duplication that are the extremes (left+right tails). Only required if MAPABILITY_SEGDUPS=yes
# Default: 0.8
MAPABILITY_SEGDUPS_CORE=0.8

# Mapability calculation in the regions in and surrounding the Breakpoints: structure of segmental duplications: % of the changes that occur in the central core, from 0 to 1. (1-MAPABILITY_SEGDUPS_CHANGES_CORE) of the changes occur in the extremes (left+right tails). Only required if MAPABILITY_SEGDUPS=yes
# Default: 0.5
MAPABILITY_SEGDUPS_CHANGES_CORE=0.5

